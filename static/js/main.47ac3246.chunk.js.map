{"version":3,"sources":["js/Api/utils.ts","js/Api/constants.ts","js/Api/index.ts","js/Api/Api.ts","js/components/sidebar/Sidebar.tsx","utils.ts","js/components/sidebar/reducer.ts","js/components/sidebar/index.ts","js/components/sidebar/actions.ts","js/components/card-list/components/Card.tsx","js/components/card-list/CardList.tsx","js/components/card-list/reducer.ts","js/components/card-list/index.ts","js/components/card-list/actions.ts","reducers/index.ts","reducers/CardListReducer.ts","containers.ts","index.tsx"],"names":["fetchApi","rqst","a","response","result","fetch","url","Error","json","ok","console","log","HEADERS","Accept","api","id","this","generateUrl","method","headers","Sidebar","min","max","Math","floor","random","props","dispatch","actions","getCard","changeFilterState","filter","className","type","onClick","changeFilter","htmlFor","addDog","loading","React","PureComponent","initialState","GET_CARD","GET_CARD_OK","GET_CARD_ERROR","CHANGE_FILTER_STATE","payload","convert","card","image","liked","getRickAndMorty","Card","src","alt","onDeleteCard","onChangeLikeCard","CardList","cardList","state","setState","prevProps","length","map","onChangeLike","modifyCardList","cardEl","CHANGE_LIKE_CARD","DELETE_CARD","combineReducers","sidebar","action","actionsSidebar","find","push","addCard","cardListReducer","SidebarContainer","connect","DogsContainer","store","applyMiddleware","getState","next","Function","createStore","reducer","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.47ac3246.chunk.js","sourcesContent":["import { APIRequest } from './interfaces'\r\n\r\nexport async function fetchApi<T>(rqst: APIRequest): Promise<T> {\r\n  let response: Response | null = null,\r\n    result: T | Error | null = null\r\n\r\n  try {\r\n    response = await fetch(rqst.url, rqst as RequestInit)\r\n  } catch (exception) {\r\n    throw new Error('Ошибка при выполнении запроса')\r\n  }\r\n\r\n  try {\r\n    result = await response.json()\r\n  } catch (exception) {\r\n    throw new Error('Ошибка получения данных')\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Ошибка при выполнении запроса')\r\n  }\r\n\r\n  console.log('API:', result)\r\n\r\n  return result as T\r\n}\r\n","export const HEADERS = {'Content-Type': 'application/json', Accept: '*/*' }\r\n","import Api from './Api'\r\nexport const api = new Api()\r\n","import { fetchApi } from './utils'\r\nimport { HEADERS } from './constants'\r\nimport { RickAndMortyResponse } from './interfaces'\r\n\r\nexport default class Api {\r\n  generateUrl(id: number): string {\r\n    return `https://rickandmortyapi.com/api/character/${id}`\r\n  }\r\n\r\n  async getRickAndMorty(id: number): Promise<RickAndMortyResponse> {\r\n    const result = await fetchApi<RickAndMortyResponse>({\r\n      url: this.generateUrl(id),\r\n      method: 'GET',\r\n      headers:HEADERS\r\n    })\r\n\r\n    return result\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { SidebarProps } from './interfaces'\r\nimport { actions } from './index'\r\nimport { getRandomId } from '../../../utils'\r\n\r\nexport class Sidebar extends React.PureComponent<SidebarProps, never> {\r\n  addDog(): void {\r\n    const id = getRandomId(1, 671)\r\n    this.props.dispatch(actions.getCard(id))\r\n  }\r\n\r\n  changeFilter(): void {\r\n    this.props.dispatch(actions.changeFilterState(!this.props.filter))\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"sidebar__filter\">\r\n          <h5 className=\"filter__title\">Отфильтровать карточки</h5>\r\n          <input className=\"filter-input\" id=\"checkbox\" type=\"checkbox\" />\r\n          <label onClick={() => this.changeFilter()} className=\"filter-label\" htmlFor=\"checkbox\" />\r\n        </div>\r\n\r\n        <button className=\"sidebar__btn\" onClick={() => this.addDog()}>\r\n          {this.props.loading ? \"Загружаю...\" :'Добавить карточку'}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Action, Middleware } from 'redux'\r\n\r\nexport const actionFn: Middleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action: Action): Action => {\r\n    if (action instanceof Function) {\r\n      return action(dispatch, getState)\r\n    }\r\n\r\n    return next(action)\r\n  }\r\n\r\nexport function getId(message: string): number {\r\n  return parseInt(message.split('.jpg')[0].split('_')[1], 10)\r\n}\r\n\r\nexport function getRandomId(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { SidebarStorage } from './interfaces'\r\nimport { IAction } from '../../../interfaces'\r\nimport { actions } from './index'\r\n\r\nconst initialState: SidebarStorage = {\r\n  filter: false,\r\n  loading: false\r\n}\r\n\r\nexport function reducer(state = initialState, action: IAction): SidebarStorage {\r\n  switch (action.type) {\r\n    case actions.CHANGE_FILTER_STATE:\r\n      return { ...state, filter: action.payload as boolean }\r\n    case actions.GET_CARD:\r\n      return { ...state, loading: true }\r\n    case actions.GET_CARD_OK:\r\n    case actions.GET_CARD_ERROR:\r\n      return { ...state, loading: false }\r\n\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n","import { Actions } from './actions'\r\nexport type { SidebarStorage, SidebarProps } from './interfaces'\r\nexport { Sidebar } from './Sidebar'\r\nexport { reducer } from './reducer'\r\nexport const actions = new Actions()\r\n","import { IAction, IActionAsync } from '../../../interfaces'\r\nimport { api } from '../../Api'\r\nimport { RickAndMortyResponse } from '../../Api/interfaces'\r\nimport { Card } from '../card-list/interfaces'\r\nimport { getId } from '../../../utils'\r\n\r\nexport class Actions {\r\n  readonly GET_CARD = 'GET_CARD'\r\n  readonly GET_CARD_OK = 'GET_CARD_OK'\r\n  readonly GET_CARD_ERROR = 'GET_CARD_ERROR'\r\n\r\n  readonly CHANGE_FILTER_STATE = 'CHANGE_FILTER_STATE'\r\n\r\n  changeFilterState = (filter: boolean): IAction => ({ type: this.CHANGE_FILTER_STATE, payload: filter })\r\n\r\n  getCard = (id: number): IActionAsync => async (dispatch) => {\r\n    const convert = (card: RickAndMortyResponse): Card => ({ image: card.image, liked: false, id: card.id })\r\n    dispatch({ type: this.GET_CARD })\r\n    try {\r\n      dispatch({ type: this.GET_CARD_OK, payload: convert(await api.getRickAndMorty(id)) })\r\n    } catch (error) {\r\n      dispatch({ type: this.GET_CARD_ERROR, payload: error })\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { CardProps } from '../interfaces'\r\n\r\nexport class Card extends React.PureComponent<CardProps, never> {\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card__body\">\r\n          <img className=\"card__img\" src={this.props.image} alt=\"Rick&Morty\" />\r\n        </div>\r\n        <div className=\"card__footer\">\r\n          <button\r\n            className=\"card__btn_delete\"\r\n            onClick={() => {\r\n              this.props.onDeleteCard({ image: this.props.image, liked: !this.props.liked, id: this.props.id })\r\n            }}>\r\n            Удалить\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.onChangeLikeCard({ image: this.props.image, liked: !this.props.liked, id: this.props.id })\r\n            }}\r\n            className={`card__btn_like ${this.props.liked ? 'card__btn_like-active' : ''}`}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { CardListProps, Card as ICard, CardListState } from './interfaces'\r\nimport { Card } from './components/Card'\r\n\r\nimport { actions } from './index'\r\n\r\nexport class CardList extends React.PureComponent<CardListProps, CardListState> {\r\n  readonly initialState: CardListState = {\r\n    cardList: []\r\n  }\r\n\r\n  constructor(props: CardListProps) {\r\n    super(props)\r\n    this.state = { ...this.initialState }\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.setState({ cardList: this.props.cardList })\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<CardListProps>): void {\r\n    if (!prevProps.filter && this.props.filter) {\r\n      this.setState({ cardList: this.filter() })\r\n      return\r\n    }\r\n\r\n    if (prevProps.filter && !this.props.filter) {\r\n      this.setState({ cardList: this.props.cardList })\r\n      return\r\n    }\r\n\r\n    if (prevProps.cardList !== this.props.cardList && this.props.filter) {\r\n      this.setState({ cardList: this.filter() })\r\n      return\r\n    }\r\n\r\n    if (prevProps.cardList !== this.props.cardList && !this.props.filter) {\r\n      this.setState({ cardList: this.props.cardList })\r\n    }\r\n  }\r\n\r\n  filter(): ICard[] {\r\n    return this.props.cardList.filter((card) => card.liked === true)\r\n  }\r\n\r\n  onChangeLikeCard = (card: ICard): void => {\r\n    this.props.dispatch(actions.onChangeLikeCard(card))\r\n  }\r\n\r\n  onDeleteCard = (card: ICard): void => {\r\n    this.props.dispatch(actions.onDeleteCard(card))\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    if (this.props.cardList.length < 1) {\r\n      return (\r\n        <div className=\"card-list_no-content\">\r\n          <h2 className=\"card-list__title\">Добавьте карточку :)</h2>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.props.cardList.length > 0 && this.state.cardList.length < 1) {\r\n      return (\r\n        <div className=\"card-list_no-content\">\r\n          <h2 className=\"card-list__title\">Лайкните понравившуюся карточку!</h2>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"card-list\">\r\n        {this.state.cardList.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            image={card.image}\r\n            liked={card.liked}\r\n            id={card.id}\r\n            onChangeLikeCard={this.onChangeLikeCard}\r\n            onDeleteCard={this.onDeleteCard}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Card, CardListStorage } from './interfaces'\r\nimport { IAction } from '../../../interfaces'\r\nimport { actions } from './index'\r\n\r\nconst initialState: CardListStorage = {\r\n  cardList: [],\r\n  filter: false\r\n}\r\n\r\nfunction onChangeLike(state: CardListStorage, card: Card): CardListStorage {\r\n  const modifyCardList = state.cardList.map((cardEl) => {\r\n    if (cardEl.id === card.id) {\r\n      cardEl.liked = card.liked\r\n      return cardEl\r\n    }\r\n\r\n    return cardEl\r\n  })\r\n  return { ...state, cardList: modifyCardList }\r\n}\r\n\r\nfunction onDeleteCard(state: CardListStorage, card: Card): CardListStorage {\r\n  const modifyCardList = state.cardList.filter((cardEl) => cardEl.id !== card.id)\r\n  return { ...state, cardList: modifyCardList }\r\n}\r\n\r\nexport function reducer(state = initialState, action: IAction): CardListStorage {\r\n  switch (action.type) {\r\n    case actions.CHANGE_LIKE_CARD:\r\n      return onChangeLike(state, action.payload as Card)\r\n    case actions.DELETE_CARD:\r\n      return onDeleteCard(state, action.payload as Card)\r\n\r\n    default:\r\n      return { ...state }\r\n  }\r\n}\r\n","import { Actions } from './actions'\r\nexport type { CardListStorage, CardListProps } from './interfaces'\r\nexport { CardList } from './CardList'\r\nexport { reducer } from './reducer'\r\nexport const actions = new Actions()\r\n","import { IAction } from '../../../interfaces'\r\nimport { Card } from './interfaces'\r\n\r\nexport class Actions {\r\n  readonly CHANGE_LIKE_CARD = 'CHANGE_LIKE_CARD'\r\n  readonly DELETE_CARD = 'DELETE_CARD'\r\n\r\n  onChangeLikeCard = (card: Card): IAction => ({ type: this.CHANGE_LIKE_CARD, payload: card })\r\n  onDeleteCard = (card: Card): IAction => ({ type: this.DELETE_CARD, payload: card })\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { reducer as sidebar } from '../js/components/sidebar'\r\nimport { reducer as cardList } from './CardListReducer'\r\n\r\nexport default combineReducers({ sidebar, cardList })\r\n","import { IAction } from '../interfaces'\r\nimport { reducer as cardListReducer, CardListStorage } from '../js/components/card-list'\r\nimport { Card } from '../js/components/card-list/interfaces'\r\nimport { actions as actionsSidebar } from '../js/components/sidebar'\r\n\r\nfunction addCard(state: CardListStorage, card: Card): CardListStorage {\r\n  if (state.cardList.find((cardEl) => cardEl.id === card.id)) {\r\n    return { ...state }\r\n  }\r\n  const modifyCardList = [...state.cardList]\r\n  modifyCardList.push(card)\r\n  return { ...state, cardList: modifyCardList }\r\n}\r\n\r\nexport function reducer(state: CardListStorage, action: IAction): CardListStorage {\r\n  switch (action.type) {\r\n    case actionsSidebar.GET_CARD_OK:\r\n      return addCard(state, action.payload as Card)\r\n\r\n    default:\r\n      return cardListReducer(state, action)\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { Storage } from './interfaces'\r\nimport { CardList, CardListProps } from './js/components/card-list'\r\nimport { Sidebar, SidebarProps } from './js/components/sidebar'\r\n\r\nexport const SidebarContainer = connect(sidebar)(Sidebar),\r\n  DogsContainer = connect(cardList)(CardList)\r\n\r\nfunction sidebar(state: Storage): SidebarProps {\r\n  return { ...state.sidebar }\r\n}\r\n\r\nfunction cardList(state: Storage): CardListProps {\r\n  return { ...state.cardList, filter: state.sidebar.filter }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport reducer from './reducers'\r\nimport { actionFn } from './utils'\r\nimport { Provider } from 'react-redux'\r\nimport * as containers from './containers'\r\n\r\nconst store = applyMiddleware(actionFn)(createStore)(reducer)\r\n\r\nconsole.log(store.getState())\r\n\r\nif (document.getElementById('sidebar')) {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <containers.SidebarContainer />\r\n    </Provider>,\r\n    document.getElementById('sidebar')\r\n  )\r\n}\r\n\r\nif (document.getElementById('card-list')) {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <containers.DogsContainer />\r\n    </Provider>,\r\n    document.getElementById('card-list')\r\n  )\r\n}\r\n"],"sourceRoot":""}